# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: geometric/accel.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from primitive import header_pb2 as primitive_dot_header__pb2
from primitive import float_pb2 as primitive_dot_float__pb2
from geometric import vector_pb2 as geometric_dot_vector__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='geometric/accel.proto',
  package='choreo',
  syntax='proto3',
  serialized_pb=_b('\n\x15geometric/accel.proto\x12\x06\x63horeo\x1a\x16primitive/header.proto\x1a\x15primitive/float.proto\x1a\x16geometric/vector.proto\"L\n\x0c\x41\x63\x63\x65lStamped\x12\x1e\n\x06header\x18\x01 \x01(\x0b\x32\x0e.choreo.Header\x12\x1c\n\x05\x61\x63\x63\x65l\x18\x02 \x01(\x0b\x32\r.choreo.Accel\"h\n\x1a\x41\x63\x63\x65lWithCovarianceStamped\x12\x1e\n\x06header\x18\x01 \x01(\x0b\x32\x0e.choreo.Header\x12*\n\x05\x61\x63\x63\x65l\x18\x02 \x01(\x0b\x32\x1b.choreo.AccelWithCovariance\"X\n\x13\x41\x63\x63\x65lWithCovariance\x12\x1c\n\x05\x61\x63\x63\x65l\x18\x01 \x01(\x0b\x32\r.choreo.Accel\x12#\n\ncovariance\x18\x02 \x03(\x0b\x32\x0f.choreo.Float64\"J\n\x05\x41\x63\x63\x65l\x12\x1f\n\x06linear\x18\x01 \x01(\x0b\x32\x0f.choreo.Vector3\x12 \n\x07\x61ngular\x18\x02 \x01(\x0b\x32\x0f.choreo.Vector3B1Z/github.com/RobotStudio/choreo-msg/msg/geometricb\x06proto3')
  ,
  dependencies=[primitive_dot_header__pb2.DESCRIPTOR,primitive_dot_float__pb2.DESCRIPTOR,geometric_dot_vector__pb2.DESCRIPTOR,])




_ACCELSTAMPED = _descriptor.Descriptor(
  name='AccelStamped',
  full_name='choreo.AccelStamped',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='choreo.AccelStamped.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='accel', full_name='choreo.AccelStamped.accel', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=104,
  serialized_end=180,
)


_ACCELWITHCOVARIANCESTAMPED = _descriptor.Descriptor(
  name='AccelWithCovarianceStamped',
  full_name='choreo.AccelWithCovarianceStamped',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='choreo.AccelWithCovarianceStamped.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='accel', full_name='choreo.AccelWithCovarianceStamped.accel', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=182,
  serialized_end=286,
)


_ACCELWITHCOVARIANCE = _descriptor.Descriptor(
  name='AccelWithCovariance',
  full_name='choreo.AccelWithCovariance',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='accel', full_name='choreo.AccelWithCovariance.accel', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='covariance', full_name='choreo.AccelWithCovariance.covariance', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=288,
  serialized_end=376,
)


_ACCEL = _descriptor.Descriptor(
  name='Accel',
  full_name='choreo.Accel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='linear', full_name='choreo.Accel.linear', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='angular', full_name='choreo.Accel.angular', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=378,
  serialized_end=452,
)

_ACCELSTAMPED.fields_by_name['header'].message_type = primitive_dot_header__pb2._HEADER
_ACCELSTAMPED.fields_by_name['accel'].message_type = _ACCEL
_ACCELWITHCOVARIANCESTAMPED.fields_by_name['header'].message_type = primitive_dot_header__pb2._HEADER
_ACCELWITHCOVARIANCESTAMPED.fields_by_name['accel'].message_type = _ACCELWITHCOVARIANCE
_ACCELWITHCOVARIANCE.fields_by_name['accel'].message_type = _ACCEL
_ACCELWITHCOVARIANCE.fields_by_name['covariance'].message_type = primitive_dot_float__pb2._FLOAT64
_ACCEL.fields_by_name['linear'].message_type = geometric_dot_vector__pb2._VECTOR3
_ACCEL.fields_by_name['angular'].message_type = geometric_dot_vector__pb2._VECTOR3
DESCRIPTOR.message_types_by_name['AccelStamped'] = _ACCELSTAMPED
DESCRIPTOR.message_types_by_name['AccelWithCovarianceStamped'] = _ACCELWITHCOVARIANCESTAMPED
DESCRIPTOR.message_types_by_name['AccelWithCovariance'] = _ACCELWITHCOVARIANCE
DESCRIPTOR.message_types_by_name['Accel'] = _ACCEL
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AccelStamped = _reflection.GeneratedProtocolMessageType('AccelStamped', (_message.Message,), dict(
  DESCRIPTOR = _ACCELSTAMPED,
  __module__ = 'geometric.accel_pb2'
  # @@protoc_insertion_point(class_scope:choreo.AccelStamped)
  ))
_sym_db.RegisterMessage(AccelStamped)

AccelWithCovarianceStamped = _reflection.GeneratedProtocolMessageType('AccelWithCovarianceStamped', (_message.Message,), dict(
  DESCRIPTOR = _ACCELWITHCOVARIANCESTAMPED,
  __module__ = 'geometric.accel_pb2'
  # @@protoc_insertion_point(class_scope:choreo.AccelWithCovarianceStamped)
  ))
_sym_db.RegisterMessage(AccelWithCovarianceStamped)

AccelWithCovariance = _reflection.GeneratedProtocolMessageType('AccelWithCovariance', (_message.Message,), dict(
  DESCRIPTOR = _ACCELWITHCOVARIANCE,
  __module__ = 'geometric.accel_pb2'
  # @@protoc_insertion_point(class_scope:choreo.AccelWithCovariance)
  ))
_sym_db.RegisterMessage(AccelWithCovariance)

Accel = _reflection.GeneratedProtocolMessageType('Accel', (_message.Message,), dict(
  DESCRIPTOR = _ACCEL,
  __module__ = 'geometric.accel_pb2'
  # @@protoc_insertion_point(class_scope:choreo.Accel)
  ))
_sym_db.RegisterMessage(Accel)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('Z/github.com/RobotStudio/choreo-msg/msg/geometric'))
# @@protoc_insertion_point(module_scope)
