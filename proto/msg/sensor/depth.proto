syntax = "proto3";

import "primitive/bool.proto";
import "primitive/bytes.proto";
import "primitive/float.proto";
import "primitive/header.proto";
import "primitive/int.proto";
import "primitive/string.proto";

import "geometric/point.proto";

import "sensor/camera.proto";

package choreo;

option go_package = "github.com/RobotStudio/choreo-msg/msg/sensor";

message LaserEcho {
  repeated Float32 echoes = 1;
}

message LaserScan {
  Header header = 1;

  Float32 angle_min = 2;
  Float32 angle_max = 3;
  Float32 angle_increment = 4;

  Float32 time_increment = 5;
  Float32 scan_time = 6;

  Float32 range_min = 7;
  Float32 range_max = 8;

  repeated Float32 ranges = 9;
  repeated Float32 intensities = 10;
}

message MultiEchoLaserScan {
  Header header = 1;

  Float32 angle_min = 2;
  Float32 angle_max = 3;
  Float32 angle_increment = 4;

  Float32 time_increment = 5;
  Float32 scan_time = 6;

  Float32 range_min = 7;
  Float32 range_max = 8;

  repeated LaserEcho ranges = 9;
  repeated LaserEcho intensities = 10;
}

message PointField {
  enum Datatype {
    INT8 = 0;
    UINT8 = 1;
    INT16 = 2;
    UINT16 = 3;
    INT32 = 4;
    UINT32 = 5;
    FLOAT32 = 6;
    FLOAT64 = 7;
  }

  String name = 1;
  UInt32 offset = 2;
  Datatype datatype = 3;
  UInt32 count = 4;
}

message PointCloud {
  Header header = 1;
  repeated Point32 points = 2;
  repeated ChannelFloat32 channels = 3;
}

message PointCloud2 {
  Header header = 1;
  UInt32 height = 2;
  UInt32 width = 3;

  repeated PointField fields = 4;

  Bool is_bigendian = 5;
  UInt32 point_step = 6;
  UInt32 row_step = 7;
  Bytes data = 8;

  Bool is_dense = 9;
}

message Range {
  Header header = 1;

  enum RadiationType {
    ULTRASOUND = 0;
    INFRARED = 1;
  }
  RadiationType radiation_type = 2;

  Float32 field_of_view = 3;
  Float32 min_range = 4;
  Float32 max_range = 5;
  Float32 range = 6;
}
